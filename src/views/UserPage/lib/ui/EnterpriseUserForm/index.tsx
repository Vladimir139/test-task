import cx from "classnames";
import { useUnit } from "effector-react";
import React, { FC, useState } from "react";

import { $user } from "@/entities/user/model";
import { ArrowYIcon } from "@/shared/lib/icons";
import {
  AdvantageCard,
  Button,
  Columns,
  Gap,
  Input,
  Line,
  Select,
  StaffCard,
  Textarea,
} from "@/shared/ui/atoms";
import { SelectList, UploadPhotosProfile } from "@/shared/ui/molecules";
import { EditorComponent } from "@/shared/ui/templates";

import styles from "./styles.module.scss";

export const EnterpriseUserForm: FC = () => {
  const user = useUnit($user);

  const [content, setContent] = useState<string>("<p>Hello World! üåéÔ∏è</p>");

  console.log("content", content);

  const [isOpenProfessions, setIsOpenProfessions] = useState(false);
  const [isOpenTags, setIsOpenTags] = useState(false);
  const [isOpenStaffTypeContact, setIsOpenStaffTypeContact] = useState(false);
  const [isOpenTypeContact, setIsOpenTypeContact] = useState(false);
  const [isOpenAdvantages, setIsOpenAdvantages] = useState(false);

  return (
    <form className={styles.form}>
      <p className={cx(styles.titleBlock, styles.marginBottomNone)}>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è</p>
      <UploadPhotosProfile />
      <div className={styles.hr} />
      <div className={styles.wrapperSelect}>
        <p className={styles.titleBlock}>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</p>
        <Select
          onClick={() => setIsOpenProfessions((prev) => !prev)}
          placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é"
          value="–§—Ä–æ–Ω—Ç–µ–Ω–¥"
          icon={<ArrowYIcon />}
          isOpen={isOpenProfessions}
          noBorderBottom={isOpenProfessions}
        />
        <SelectList
          stretch
          isVisible={isOpenProfessions}
          handleClose={() => setIsOpenProfessions(false)}
          items={[
            { id: 1, value: "frontend", title: "–§—Ä–æ–Ω—Ç–µ–Ω–¥" },
            { id: 2, value: "backend", title: "–ë–µ–∫–µ–Ω–¥" },
          ]}
          // @ts-ignore
          handleChange={setIsOpenProfessions}
        />
      </div>
      <Line>
        <Input
          title="–ù–∞–∑–≤–∞–Ω–∏–µ: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: "
          value={user?.enterpriseUserData?.enterprise.name}
          name="name"
          type="text"
          isRequired
        />
        <Input
          title="–î–µ–Ω—å —Å–æ–∑–¥–∞–Ω–∏—è/–æ—Ç–∫—Ä—ã—Ç–∏—è: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å: "
          value={user?.enterpriseUserData?.enterprise.dateOfBirth}
          name="dateOfBirth"
          type="date"
          isRequired
        />
        <Input
          title="–ì–æ—Ä–æ–¥: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: "
          value={user?.enterpriseUserData?.enterprise.city}
          name="city"
          type="text"
          isRequired
        />
      </Line>
      <Line>
        <Input
          title="–°–∞–π—Ç: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É —Å–∞–π—Ç–∞: "
          value={user?.enterpriseUserData?.enterprise.site}
          name="site"
          type="text"
          isRequired
        />
        <Input
          title="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: "
          value={user?.enterpriseUserData?.enterprise.specialization}
          name="specialization"
          type="text"
          isRequired
        />
        <Input
          title="–¢–µ–ª–µ—Ñ–æ–Ω: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "
          value={user?.enterpriseUserData?.enterprise.phone}
          name="specialization"
          type="tel"
        />
      </Line>
      <div className={styles.hr} />
      <Line>
        <Input
          title="–ê–¥—Ä–µ—Å—Å: "
          onChange={() => {}}
          placeholder="–ì. –í–µ–ª—å—Å–∫, —É–ª. –ù–∞–¥–µ–∂–¥—ã, –¥. 89"
          value={user?.enterpriseUserData?.enterprise.fullNameLocation}
          name="fullNameLocation"
          type="text"
          isRequired
        />
        <Input
          title="–®–∏—Ä–æ—Ç–∞: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–æ—Ç—É: "
          value={user?.enterpriseUserData?.enterprise.location[0]}
          name="location"
          type="number"
          isRequired
        />
        <Input
          title="–î–æ–ª–≥–æ—Ç–∞: "
          onChange={() => {}}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–≥–æ—Ç—É: "
          value={user?.enterpriseUserData?.enterprise.location[1]}
          name="location"
          type="number"
          isRequired
        />
      </Line>
      <div className={styles.hr} />
      <Line>
        <Input
          isRequired
          stretch
          title="–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"
          type="number"
          name="startSalary"
          onChange={() => {}}
          value=""
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É"
        />
        <Input
          isRequired
          stretch
          title="–ö–æ–Ω–µ—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"
          type="number"
          name="endSalary"
          onChange={() => {}}
          value=""
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É"
        />
      </Line>
      <div className={styles.hr} />
      <Columns
        leftWrapper={
          <div>
            <Line alignBottom>
              <Input
                title="–ö–æ–Ω—Ç–∞–∫—Ç: "
                onChange={() => {}}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç: "
                value=""
                name="contacts"
                type="text"
              />
              <Input
                title="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞: "
                onChange={() => {}}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: "
                value=""
                name="contacts"
                type="text"
              />
              <div className={styles.wrapperSelect}>
                <Select
                  stretch
                  onClick={() => setIsOpenTypeContact((prev) => !prev)}
                  placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–∞–∫—Ç–∞: "
                  value="–¢–µ–ª–µ—Ñ–æ–Ω"
                  icon={<ArrowYIcon />}
                  isOpen={isOpenTypeContact}
                  noBorderBottom={isOpenTypeContact}
                />
                <SelectList
                  stretch
                  isVisible={isOpenTypeContact}
                  handleClose={() => setIsOpenTypeContact(false)}
                  items={[
                    { id: 1, value: "phone", title: "–¢–µ–ª–µ—Ñ–æ–Ω" },
                    { id: 2, value: "tg", title: "–¢–µ–ª–µ–≥—Ä–∞–º" },
                  ]}
                  // @ts-ignore
                  handleChange={setIsOpenTypeContact}
                />
              </div>
            </Line>
            <div className={styles.wrapperBtn}>
              <Button radius="little" size="normal">
                –î–æ–±–∞–≤–∏—Ç—å
              </Button>
            </div>
          </div>
        }
        rightWrapper={
          <div>
            <p className={styles.titleBlock}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</p>
            <ul className={styles.columnWrapper}>
              {user?.enterpriseUserData?.enterprise.contacts.map((contact) => (
                <li key={contact.name} className={styles.contact}>
                  {contact.contact} - {contact.name}
                </li>
              ))}
            </ul>
          </div>
        }
      />
      <div className={styles.hr} />
      <Columns
        leftWrapper={
          <div className={styles.columnWrapper}>
            <div className={styles.wrapperSelect}>
              <p className={styles.titleBlock}>–¢–µ–≥–∏</p>
              <Select
                stretch
                onClick={() => setIsOpenTags((prev) => !prev)}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–≥–∏"
                value="–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å"
                icon={<ArrowYIcon />}
                isOpen={isOpenTags}
                noBorderBottom={isOpenTags}
              />
              <SelectList
                stretch
                isVisible={isOpenTags}
                handleClose={() => setIsOpenTags(false)}
                items={[
                  { id: 1, value: "fullday", title: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å" },
                  { id: 2, value: "remote", title: "–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞" },
                ]}
                // @ts-ignore
                handleChange={setIsOpenTags}
              />
            </div>
          </div>
        }
        rightWrapper={
          <ul className={styles.tagsList}>
            {[
              { id: 1, value: "fullday", title: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å" },
              { id: 2, value: "remote", title: "–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞" },
            ].map((tag) => (
              <li key={tag.id}> {tag.title}</li>
            ))}
          </ul>
        }
      />
      <div className={styles.hr} />
      <Columns
        leftWrapper={
          <div>
            <Input
              title="–ó–Ω–∞–Ω–∏—è/—É–º–µ–Ω–∏—è: "
              onChange={() => {}}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–Ω–∞–Ω–∏—è/—É–º–µ–Ω–∏—è: "
              value={user?.enterpriseUserData?.enterprise.knowledge[0]}
              name="knowledge"
              type="text"
              isRequired
            />
            <div className={styles.wrapperBtn}>
              <Button radius="little" size="normal">
                –î–æ–±–∞–≤–∏—Ç—å
              </Button>
            </div>
          </div>
        }
        rightWrapper={
          <ul className={styles.tagsList}>
            {[
              { id: 1, value: "—Ñ—ã–≤–∞", title: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å" },
              { id: 2, value: "—Ñ—ã–≤–∞—Ü", title: "10-—Ç–∏ –ø–∞–ª—å—Ü–µ–≤—ã–π –Ω–∞–±–æ—Ä" },
            ].map((knowledge) => (
              <li key={knowledge.id}> {knowledge.title}</li>
            ))}
          </ul>
        }
      />
      <div className={styles.hr} />
      <Columns
        leftWrapper={
          <div className={cx(styles.columnWrapper, styles.smallGap)}>
            <Input
              title="–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              onChange={() => {}}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              value=""
              name="staff"
              type="text"
            />
            <Input
              title="–û—Ç—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              onChange={() => {}}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              value=""
              name="staff"
              type="text"
            />
            <Input
              title="–§–∞–º–∏–ª–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              onChange={() => {}}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              value=""
              name="staff"
              type="text"
            />
            <Input
              title="–î–æ–ª–∂–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              onChange={() => {}}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
              value=""
              name="staff"
              type="text"
            />
            <Line alignBottom>
              <Input
                title="–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: "
                onChange={() => {}}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç: "
                value=""
                name="staff"
                type="text"
              />
              <div className={styles.wrapperSelect}>
                <Select
                  stretch
                  onClick={() => setIsOpenStaffTypeContact((prev) => !prev)}
                  placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–∞–∫—Ç–∞: "
                  value="–¢–µ–ª–µ—Ñ–æ–Ω"
                  icon={<ArrowYIcon />}
                  isOpen={isOpenStaffTypeContact}
                  noBorderBottom={isOpenStaffTypeContact}
                />
                <SelectList
                  stretch
                  isVisible={isOpenStaffTypeContact}
                  handleClose={() => setIsOpenStaffTypeContact(false)}
                  items={[
                    { id: 1, value: "phone", title: "–¢–µ–ª–µ—Ñ–æ–Ω" },
                    { id: 2, value: "tg", title: "–¢–µ–ª–µ–≥—Ä–∞–º" },
                  ]}
                  // @ts-ignore
                  handleChange={setIsOpenStaffTypeContact}
                />
              </div>
            </Line>
            <div>
              <Button radius="little" size="normal">
                –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
              </Button>
            </div>
          </div>
        }
        rightWrapper={
          <div>
            <p className={styles.titleBlock}>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</p>
            <div className={styles.columnWrapper}>
              {user?.enterpriseUserData?.enterprise?.staff?.map((staff) => (
                <StaffCard
                  name={staff.name}
                  id={staff.id}
                  surname={staff.surname}
                  photo={staff.photo}
                  contactStaff={staff.contactStaff}
                  middleName={staff.middleName}
                  position={staff.position}
                />
              ))}
            </div>
          </div>
        }
      />
      <div className={styles.hr} />
      <Columns
        leftWrapper={
          <div>
            <Line alignBottom>
              <Input
                title="–ü—Ä–∏–µ–º—É—â–µ—Å—Ç–≤–∞ –∏ –ª—å–≥–æ—Ç—ã: "
                onChange={() => {}}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞/–ª—å–≥–æ—Ç—ã: "
                value=""
                name="advantagesOfTheEntity"
                type="text"
              />
              <div className={styles.wrapperSelect}>
                <Select
                  stretch
                  onClick={() => setIsOpenAdvantages((prev) => !prev)}
                  placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∫–æ–Ω–∫—É –ª—å–≥–æ—Ç—ã: "
                  value="–ò–∫–æ–Ω–∫–∞"
                  icon={<ArrowYIcon />}
                  isOpen={isOpenAdvantages}
                  noBorderBottom={isOpenAdvantages}
                />
                <SelectList
                  stretch
                  isVisible={isOpenAdvantages}
                  handleClose={() => setIsOpenAdvantages(false)}
                  items={[
                    { id: 1, value: "1", title: "–ò–∫–æ–Ω–∫–∞ 1" },
                    { id: 2, value: "2", title: "–ò–∫–æ–Ω–∫–∞ 2" },
                  ]}
                  // @ts-ignore
                  handleChange={setIsOpenAdvantages}
                />
              </div>
            </Line>
            <div className={styles.wrapperBtn}>
              <Button radius="little" size="normal">
                –î–æ–±–∞–≤–∏—Ç—å
              </Button>
            </div>
          </div>
        }
        rightWrapper={
          <div>
            <p className={styles.titleBlock}>–ü—Ä–µ–∏–º—É—â—Å—Ç–≤–∞ –∏ –ª—å–≥–æ—Ç—ã</p>
            <div className={styles.columnWrapper}>
              {user?.enterpriseUserData?.enterprise?.advantagesOfTheEntity?.map((advantage) => (
                <AdvantageCard text={advantage.text} icon={advantage.icon} />
              ))}
            </div>
          </div>
        }
      />
      <div className={styles.hr} />
      <Textarea
        name="previewDesc"
        value=""
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–≤—å—é –æ–ø–∏—Å–∞–Ω–∏–µ"
        rows={10}
        cols={100}
        onChange={() => {}}
        title="–ü—Ä–µ–≤—å—é –æ–ø–∏—Å–∞–Ω–∏–µ: "
        isRequired
      />
      <div className={styles.hr} />
      <div className={styles.wrapperBlock}>
        <p className={styles.titleBlock}>–û–ø–∏—Å–∞–Ω–∏–µ</p>
        <EditorComponent placeholder="–û–ø–∏—Å–∞–Ω–∏–µ..." content={content} setContent={setContent} />
      </div>
    </form>
  );
};
